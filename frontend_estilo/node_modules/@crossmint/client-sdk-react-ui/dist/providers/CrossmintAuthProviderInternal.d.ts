import * as react_jsx_runtime from 'react/jsx-runtime';
import * as React from 'react';
import { MouseEvent } from 'react';
import { CrossmintAuth } from '@crossmint/client-sdk-auth';
import { OAuthProvider, SDKExternalUser } from '@crossmint/common-sdk-auth';
import { ExternalWalletSignerConfigForChain, Chain } from '@crossmint/wallets-sdk';
import { AuthStatus, CrossmintAuthProviderProps } from '../types/auth.js';
import '@crossmint/common-sdk-base';
import '@crossmint/client-sdk-react-base';

type AuthContextType = {
    crossmintAuth?: CrossmintAuth;
    login: (defaultEmail?: string | MouseEvent) => void;
    experimental_loginWithOAuth: (provider: OAuthProvider) => void;
    logout: () => void;
    jwt?: string;
    user?: SDKExternalUser;
    status: AuthStatus;
    getUser: () => void;
    experimental_externalWalletSigner: ExternalWalletSignerConfigForChain<Chain> | undefined;
    loginMethods: CrossmintAuthProviderProps["loginMethods"];
};
declare const AuthContext: React.Context<AuthContextType>;
declare function CrossmintAuthProviderInternal({ children, appearance, termsOfServiceText, prefetchOAuthUrls, authModalTitle, onLoginSuccess, loginMethods, refreshRoute, logoutRoute, }: CrossmintAuthProviderProps): react_jsx_runtime.JSX.Element;

export { AuthContext, CrossmintAuthProviderInternal };
